// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs_data.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CsProtobuf {

  /// <summary>Holder for reflection information generated from cs_data.proto</summary>
  public static partial class CsDataReflection {

    #region Descriptor
    /// <summary>File descriptor for cs_data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CsDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1jc19kYXRhLnByb3RvEgtjc19wcm90b2J1ZhodZ29vZ2xlL3Byb3RvYnVm",
            "L2NzX2VudW0ucHJvdG8aHGdvb2dsZS9wcm90b2J1Zi9jc19tc2cucHJvdG8i",
            "egoEUm9sZRIgCgRjYW1wGAEgASgOMhIuY3NfcHJvdG9idWYuQ2FtcHMSJwoI",
            "cGxheWVySUQYAiABKA4yFS5jc19wcm90b2J1Zi5QbGF5ZXJJRBInCgljYXJk",
            "SXRlbXMYAyADKAsyFC5jc19wcm90b2J1Zi5DYXJkTXNnIi8KC0JhdHRsZUdy",
            "b3VwEiAKBXJvbGVzGAEgAygLMhEuY3NfcHJvdG9idWYuUm9sZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CsProtobuf.CsEnumReflection.Descriptor, global::CsProtobuf.CsMsgReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CsProtobuf.Role), global::CsProtobuf.Role.Parser, new[]{ "Camp", "PlayerID", "CardItems" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CsProtobuf.BattleGroup), global::CsProtobuf.BattleGroup.Parser, new[]{ "Roles" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Role : pb::IMessage<Role> {
    private static readonly pb::MessageParser<Role> _parser = new pb::MessageParser<Role>(() => new Role());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Role> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CsProtobuf.CsDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role(Role other) : this() {
      camp_ = other.camp_;
      playerID_ = other.playerID_;
      cardItems_ = other.cardItems_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role Clone() {
      return new Role(this);
    }

    /// <summary>Field number for the "camp" field.</summary>
    public const int CampFieldNumber = 1;
    private global::CsProtobuf.Camps camp_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CsProtobuf.Camps Camp {
      get { return camp_; }
      set {
        camp_ = value;
      }
    }

    /// <summary>Field number for the "playerID" field.</summary>
    public const int PlayerIDFieldNumber = 2;
    private global::CsProtobuf.PlayerID playerID_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CsProtobuf.PlayerID PlayerID {
      get { return playerID_; }
      set {
        playerID_ = value;
      }
    }

    /// <summary>Field number for the "cardItems" field.</summary>
    public const int CardItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::CsProtobuf.CardMsg> _repeated_cardItems_codec
        = pb::FieldCodec.ForMessage(26, global::CsProtobuf.CardMsg.Parser);
    private readonly pbc::RepeatedField<global::CsProtobuf.CardMsg> cardItems_ = new pbc::RepeatedField<global::CsProtobuf.CardMsg>();
    /// <summary>
    ///卡牌数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CsProtobuf.CardMsg> CardItems {
      get { return cardItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Role);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Role other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Camp != other.Camp) return false;
      if (PlayerID != other.PlayerID) return false;
      if(!cardItems_.Equals(other.cardItems_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Camp != 0) hash ^= Camp.GetHashCode();
      if (PlayerID != 0) hash ^= PlayerID.GetHashCode();
      hash ^= cardItems_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Camp != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Camp);
      }
      if (PlayerID != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PlayerID);
      }
      cardItems_.WriteTo(output, _repeated_cardItems_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Camp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Camp);
      }
      if (PlayerID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlayerID);
      }
      size += cardItems_.CalculateSize(_repeated_cardItems_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Role other) {
      if (other == null) {
        return;
      }
      if (other.Camp != 0) {
        Camp = other.Camp;
      }
      if (other.PlayerID != 0) {
        PlayerID = other.PlayerID;
      }
      cardItems_.Add(other.cardItems_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            camp_ = (global::CsProtobuf.Camps) input.ReadEnum();
            break;
          }
          case 16: {
            playerID_ = (global::CsProtobuf.PlayerID) input.ReadEnum();
            break;
          }
          case 26: {
            cardItems_.AddEntriesFrom(input, _repeated_cardItems_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BattleGroup : pb::IMessage<BattleGroup> {
    private static readonly pb::MessageParser<BattleGroup> _parser = new pb::MessageParser<BattleGroup>(() => new BattleGroup());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CsProtobuf.CsDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleGroup(BattleGroup other) : this() {
      roles_ = other.roles_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleGroup Clone() {
      return new BattleGroup(this);
    }

    /// <summary>Field number for the "roles" field.</summary>
    public const int RolesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::CsProtobuf.Role> _repeated_roles_codec
        = pb::FieldCodec.ForMessage(10, global::CsProtobuf.Role.Parser);
    private readonly pbc::RepeatedField<global::CsProtobuf.Role> roles_ = new pbc::RepeatedField<global::CsProtobuf.Role>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CsProtobuf.Role> Roles {
      get { return roles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roles_.Equals(other.roles_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roles_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      roles_.WriteTo(output, _repeated_roles_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roles_.CalculateSize(_repeated_roles_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleGroup other) {
      if (other == null) {
        return;
      }
      roles_.Add(other.roles_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
